/*****************************************************
             PROJECT  : svUnitTest
             VERSION  : 0.3.0
             DATE     : 05/2011
             AUTHOR   : Valat SÃ©bastien
             LICENSE  : CeCILL-C
*****************************************************/
/**
@mainpage svUnitTest

@section Objectives Objectives

This is another unit test framework for C++. There are already many functional framework for this (cppunit.............), so, why done another one ?

 - Because this is fun and it's a good way to learn.
 - To try some extension compared to standard frameworks.
 - To generate nice reports (color in console text mode, nice XML+XSLT output...)
 - Integrate it to KDevelop without using qttestlib (It seems to be removed in newer Kdevelop version ???).
 - Light library.
 - OpenSource.
 - SIMPLE to use.
 - CppUnit is not really friendly (in my point of view, even if it a good library strictly speaking) to use and seems to be really limited (without extended it), for example  : 
     - the default ASSERT macro are really limited, 
     - ASSERT_EQUAL force the type equality, so can't simply compare a string object to const C string, or other string classes.
     - No ASSERT_TRUE/FALSE, we got 0 or 1 as display.
     - No ASSERT to quickly check exceptions
     - Too complex main method to build the test
     - At writing time, google unit didn't exist... :(

@subpage user-doc-screenshots

\htmlonly
<img src='kdevelop_integration.png' height=250px/>
\endhtmlonly
\htmlonly
<img src='color_term_view.png' height=250px/>
\endhtmlonly
\htmlonly
<img src='html_view.png' height=250px/>
\endhtmlonly


@section Features Features

Here a short list of svUnitTest features :

 - Declare tests with objects or flat C-like functions.
 - Support output format : text, text with color, xml, qt_xml, junit_xml
 - Conversion to static webpages from XML format.
 - Run and display from webbrowser.
 - Basic help for integration in cmake / autotools / Makefile + pkg-config.
 - Supported compilers : ICC, GCC, CLANG and VCC (maybe others will work).

@section Version040November22012 Version 0.4.0 (November 2, 2012)

 - Many bug fixes.
 - Add some packaging example files (Gentoo, Arch Linux and Fedora)
 - Add new assertion SVUT_ASSERT_ZERO/SVUT_ASSERT_NO_ZERO
 - Add support of flat test with C like functions.
 - Add missing character escaping in XML formats.
 - Add support of JUnit XML output format.
 - Provide some scripts to quicly generate HTML reports.
 - Capture printf/puts/cout in tests (not in external libs up to now).

You can get the full change log here : @subpage user-doc-changelog

@section Dependencies Dependencies

Related tools and libs required or optional to use and develop svUnitTest :

 - Cmake      : http://www.cmake.org/
 - CppUnit    : http://sourceforge.net/apps/mediawiki/cppunit/
 - Doxygen    : http://www.doxygen.org/
 - LCov       : http://ltp.sourceforge.net/coverage/lcov.php
 - GCC        : http://gcc.gnu.org/
 - ICC        : http://software.intel.com/en-us/intel-compilers/
 - CLand      : http://clang.llvm.org/
 - xsltproc   : http://xmlsoft.org/XSLT/

Extra development tools used :

 - GitHub     : http://github.com/
 - Kdevelop 4 : http://www.kdevelop.org/
 - GDB        : http://www.gnu.org/software/gdb/
 - valgrind   : http://valgrind.org/
 - Jenkins    : http://jenkins-ci.org/

As a user, you may be interested by :

 - Cmake      : http://www.cmake.org/
 - Pkg-config : http://pkg-config.freedesktop.org/wiki/
 - Autoconf   : http://www.gnu.org/software/autoconf/
 - Automake   : http://www.gnu.org/software/automake/

@section Testedenvironments Tested environments

This is the list of tested environnements for version 0.4.0 :

<table>
	<tr>
		<th>OS</th>
		<th>OS Version</th>
		<th>Architecture</th>
		<th>gcc</th>
		<th>clang</th>
		<th>vcc</th>
		<th>icc</th>
		<th>Last test date</th>
		<th>Lib. version</th>
	</tr><tr>
		<td>Gentoo</td>
		<td>20121016</td>
		<td>x86_64</td>
		<td>4.4.6, 4.5.3, 4.6.2, 4.7.2</td>
		<td>3.1</td>
		<td>-</td>
		<td>-</td>
		<td>Oct. 2012</td>
		<td>0.4.0</td>
	</tr><tr>
		<td>Ubuntu</td>
		<td>12.04</td>
		<td>x86_64</td>
		<td>4.4.7, 4.5.3, 4.6.3</td>
		<td>3.0</td>
		<td>2013</td>
		<td>-</td>
		<td>Oct. 2012</td>
		<td>0.4.0</td>
	</tr><tr>
		<td>Fedora</td>
		<td>17</td>
		<td>x86_64</td>
		<td>4.7.2</td>
		<td>-</td>
		<td>-</td>
		<td>-</td>
		<td>Oct. 2012</td>
		<td>0.4.0</td>
	</tr><tr>
		<td>Centos</td>
		<td>6.3</td>
		<td>x86_64</td>
		<td>4.4.6</td>
		<td>-</td>
		<td>-</td>
		<td>-</td>
		<td>Oct. 2012</td>
		<td>0.4.0</td>
	</tr><tr>
		<td>FreeBSD</td>
		<td>9.0</td>
		<td>x86_64</td>
		<td>3.4.6, 4.2.5, 4.4.7</td>
		<td>3.0</td>
		<td>-</td>
		<td>-</td>
		<td>Oct. 2012</td>
		<td>0.4.0</td>
	</tr><tr>
		<td>Windows</td>
		<td>7</td>
		<td>x86_64</td>
		<td>-</td>
		<td>-</td>
		<td>-</td>
		<td>2010</td>
		<td>Oct. 2012</td>
		<td>0.4.0</td>
	</tr>
</table>

Notice that version it support compiling with <em>-std=c++0x</em> or <em>-std=c++11</em> on Linux gcc, icc and clang. 
Since 0.3.0 it fully passed gcc and icc with <em>-pedantic</em> / <em>-Wcheck</em> and <em>-Werror</em>.

Known incompatibilities :

 - <em>gcc -std=c++98</em> : Due to lack of typeof() keyword.
 - Clang require <em>-Wno-language-extension-token</em> or <em>-std=c++0x</em> to use <em>-Werror -pedantic</em>
 - Depending on your system, using clang may require to add <em>-U__GXX_EXPERIMENTAL_CXX0X__</em> due to a bug with some stdc++ headers.

You can get old test reports on : @subpage user-doc-old-tested-env.

@section Userdocumentation User documentation

You can access to a doxygen at http://svunittest.pagesperso-orange.fr/index.html

 - @subpage user-doc-install
 - @subpage user-doc-write-first-test
 - @subpage user-doc-no-class
 - @subpage user-doc-build-makefile
 - @subpage user-doc-build-pkg-config
 - @subpage user-doc-build-cmake
 - @subpage user-doc-build-autotools
 - @subpage user-doc-build-your-first-suite
 - @subpage user-doc-test-coverage
 - @subpage user-doc-available-assertions
 - @subpage user-doc-extend-type
 - @subpage user-doc-extend-macro
 - @subpage user-doc-status
 - @subpage user-doc-html
 - @subpage user-doc-kdevelop4
 - @subpage user-doc-debug-context
 - @subpage user-doc-inherit
 - @subpage  user-doc-stdout
 - @subpage  user-doc-jenkins
 - @subpage  user-doc-eclipse

@section Developerdocumentation Developer documentation

 - @subpage dev-doc-style
 - @subpage dev-doc-defs
 - @subpage dev-doc-directories
 - @subpage dev-doc-obj-meth
 - @subpage dev-doc-location
 - @subpage dev-doc-exceptions
 - @subpage dev-doc-status-and-asserts
 - @subpage dev-doc-global-uml
 - @subpage dev-doc-gcov
 - @subpage dev-doc-asserts
 - @subpage dev_doc-events
 - @subpage dev-doc-formatter
 - @subpage dev-doc-runner
 - @subpage dev-doc-auto-register
 - @subpage dev-doc-filtering
 - @subpage dev-doc-defaultMain
 - @subpage dev-doc-updateVersion
 - @subpage dev-doc-jenkins
**/
